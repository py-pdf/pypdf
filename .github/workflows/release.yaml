# This action assumes that there is a REL-commit which already has a
# Markdown-formatted git tag. Hence, the CHANGELOG is already adjusted,
# and it's decided what should be in the release.
# This action only ensures the release is done with the proper contents
# and that it's announced with a GitHub release.
name: Create git tag
on:
  push:
    branches:
      - main

permissions:
  contents: write

env:
  HEAD_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

jobs:
  build_and_publish:
    name: Publish a new version
    runs-on: ubuntu-latest
    if: "${{ startsWith(github.event.head_commit.message, 'REL: ') }}"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract version from commit message
        id: extract_version
        run: |
          VERSION=$(echo "$HEAD_COMMIT_MESSAGE" | grep -oP '(?<=REL: )\d+\.\d+\.\d+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Extract tag message from commit message
        id: extract_message
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          delimiter="$(openssl rand -hex 8)"
          MESSAGE=$(echo "$HEAD_COMMIT_MESSAGE" | sed "0,/REL: $VERSION/s///" )
          echo "message<<${delimiter}" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          VERSION="${{ steps.extract_version.outputs.version }}"
          MESSAGE="${{ steps.extract_message.outputs.message }}"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "$VERSION" -m "$MESSAGE"
          git push origin $VERSION
